<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml
					classpath:/security-context.xml  <!--  시큐리티 설정파일추가  -->
					classpath:/security-datasource.xml   <!-- 시큐리티 설정파일추가 --> 
		</param-value>
	</context-param>
	<!-- 
	classpath:/security-context.xml
	classpath:/security-datasource.xml
	시큐리티 설정경로 입니다. 후에 시큐리티 적용하는 사람이 시큐리티 진입 알려주신 후 사용해주시면 됩니다.
	XML파일은 심어뒀고 상황에 맞게 변경해서 사용해주시면됩니다.
	 -->
	
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 2. 시큐리티 추가 -->
	
   <!-- 스프링 시큐리티에서 사용하는 세션 이벤트 처리 관련 리스너로서, 세션 만료 체크, 동시 로그인 제한 등의 기능 제공 -->
   <listener>
      <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
   </listener>
	<!--3. 한글 안깨지게 처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--3. 한글 안깨지게 처리 -->
	
	<!-- 시큐리티 추가 시작 -->
   <!--
             보안 필터 제안 : 보안과 관련된 직업을 처리한다.
        - 로그인 폼을 보여주거나, 접근 권한이 없는 경우 403 Forbidden(권한없음) 상태 코드를 응답
        - DelegatingFilterProxy -> FilterChainProxy -> SecurityFilterChain -> 실제 자원
   -->
   <filter>
      <filter-name>springSecurityFilterChain</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
   <!-- 시큐리티 추가 종료 -->
   
   <!-- 5. 에러처리 페이지 -->
   <error-page>
      <error-code>500</error-code>
      <location>/user/login</location>
   </error-page>
   
   <!-- 6. 세션 타임 아웃 설정(20분) -->
   <session-config>
      <session-timeout>20</session-timeout>
   </session-config>

</web-app>