<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:sec="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->
   
   <sec:http auto-config="true" use-expressions="true" create-session="never">
   
   <!-- 관리자 영역 설정 -->
   <sec:intercept-url pattern="/host_**" access="hasRole('ADMIN')" />
   
   <!-- 로그인한 사용자의 영역 -->
   <sec:intercept-url pattern="/user**" access="hasAnyRole('USER', 'ADMIN')" />
  
   <!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->
   <sec:intercept-url pattern="/**" access="permitAll"/>
   
   <sec:anonymous />
   
   <!-- 로그인 폼 -->
   <!-- username-parameter="컬럼명" password-parameter="컬럼명" -->
   <sec:form-login login-page="/login_reg"
      login-processing-url="/login_check"
      authentication-success-handler-ref="UserLoginSuccessHandler"
      authentication-failure-handler-ref="UserLoginFailureHandler"
      username-parameter="username" password-parameter="password" />      
   
  <sec:session-management>
     <sec:concurrency-control max-sessions="1"
         expired-url="/login_reg"
         error-if-maximum-exceeded="true" />
   </sec:session-management>
   
   <!-- 접근권한이 없는 경우의 코드 -->
   <sec:access-denied-handler ref="UserDeniedHandler" />
   </sec:http>
   
   <bean id="UserLoginSuccessHandler" class="com.pro.hellscare.Service.UserLoginSuccessHandler" />
   <bean id="UserLoginFailureHandler" class="com.pro.hellscare.Service.UserLoginFailureHandler" />
   <bean id="UserDeniedHandler" class="com.pro.hellscare.Service.UserDeniedHandler" />
   
   <!-- 로그인 인증을 처리하는 빈 -->
   <bean id="userService" class="com.pro.hellscare.Service.UserAuthenticationService">
      <constructor-arg name="sqlSession" ref="sqlSession" />
   </bean>
   
   <!-- 비밀번호 암호화를 빈 -->
   <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
   
</beans>